import matplotlib.pyplot as plt
import pickle
import itertools
import math
import random

def random_drop_chunks(original_list, num_chunks, target_size):

    chunk_size = len(original_list) // num_chunks

    if chunk_size * num_chunks < target_size:
        raise ValueError("Target size is too large to be reached by dropping chunks.")

    chunks = [original_list[i:i + chunk_size] for i in range(0, len(original_list), chunk_size)]

    num_drop_chunks = (len(original_list) - target_size) // chunk_size

    drop_indices = random.sample(range(num_chunks), num_drop_chunks)

    for index in sorted(drop_indices, reverse=True):
        del chunks[index]

    new_list = []
    for chunk in chunks:
        new_list.extend(chunk)

    return new_list





if __name__=='__main__':
    with open('test_files.pkl', 'rb') as f:
        # labels = pickle.load(f)
        files = pickle.load(f)

    text_data=[list(itertools.chain(*x)) for x in files]

    for index,data in enumerate(text_data):
        print(index)
        if len(data)>6000:
            text_data[index] = random_drop_chunks(data, 1000, 6000)[:6000]
    
    with open("adjusted_test_files.pkl", 'wb') as f:
        # pickle.dump(labels, f)
        pickle.dump(text_data, f)    