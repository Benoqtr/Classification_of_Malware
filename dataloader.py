import numpy as np
from torch.utils.data import DataLoader, Dataset
import gensim
import torch
import torch.nn as nn

# 定义数据集类
class TextDataset(Dataset):
    def __init__(self, X, y,LEN):
        self.X = X[:LEN]
        self.y = y.tolist()[:LEN]
        
    def __getitem__(self, index):
        return self.X[index,:,:], self.y[index]
    
    def __len__(self):
        return len(self.X)

def dl(batch_size=8,LEN = 1000):
    data = torch.load("src/tensor/train_tensor_0.pt")
    label = torch.load("src/tensor/label_tensor.pt")
    train_dataset = TextDataset(data, label[0:7500], LEN)
    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
    return train_loader

def vl(batch_size=8,LEN = 1000):
    data = torch.load("src/tensor/train_tensor_1.pt")
    label = torch.load("src/tensor/label_tensor.pt")
    train_dataset = TextDataset(data, label[7500:], LEN)
    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)
    return train_loader

if __name__=='__main__':

    dl=dl()
    vl=vl()
    vl=vl()
